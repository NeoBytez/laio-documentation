"use strict";(self.webpackChunklaio_documentation=self.webpackChunklaio_documentation||[]).push([[995],{1314:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var t=r(4848),a=r(8453);const i={},o="Stamina",s={id:"Laio/common/Library/Stamina",title:"Stamina",description:"Overview",source:"@site/docs/Laio/common/Library/Stamina.md",sourceDirName:"Laio/common/Library",slug:"/Laio/common/Library/Stamina",permalink:"/laio-documentation/Laio/common/Library/Stamina",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Notify",permalink:"/laio-documentation/Laio/common/Library/Selector"},next:{title:"Stat",permalink:"/laio-documentation/Laio/common/Library/Stat"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Methods",id:"methods",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"stamina",children:"Stamina"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["A basic stamina system. Manages regeneration and consumption along with providing a flag for if you are sprinting. ",(0,t.jsx)(n.code,{children:"Update(bool attemptingSprint)"})," handles both consumption and regeneration, so it must be called every frame. You must have more stamina then ",(0,t.jsx)(n.code,{children:"requiredStaminaForSprint"})," to begin sprinting, however, if you are sprinting to can run your stamina down to 0. Provides the ability to try and spend stamina using ",(0,t.jsx)(n.code,{children:"bool TrySpend(float cost)"}),", this can be used for jumping."]}),"\n",(0,t.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public Stamina(float regen, float consumption)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public Stamina(float min, float max, float requiredStaminaForSprint, float regenSpeed, float consumptionSpeed)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public bool TrySpend(float cost)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public void SetRegeneration(float regeneration)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public void SetConsumption(float consumption)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public void Update(bool attemptingSprint)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public void ResetStamina()\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public bool IsSprinting()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"// Stamina\r\n[SerializedField] private Stamina _stamina;\r\n[SerializedField] private float _staminaJumpCost;\r\n\r\n// Movement speeds\r\n[SerializedField] private float _walkSpeed;\r\n[SerializedField] private float _sprintSpeed;\r\n\r\n//Get the correct speed based on whether we are sprinting\r\npublic float Speed \r\n{\r\n    get\r\n    {\r\n        if (_stamina.IsSprinting())\r\n            return speed = _sprintSpeed;\r\n        return speed = _walkSpeed;\r\n    }\r\n}\r\n\r\npublic void Awake() => _stamina.ResetStamina();\r\n\r\npublic void Update()\r\n{\r\n    // Get input\r\n    bool trySprint = Input.GetKey(KeyCode.LeftShift);\r\n    bool tryJump = Input.GetKey(KeyCode.Space);\r\n\r\n    // Update stamina with whether we are attempting to run\r\n    _stamina.Update(trySprint);\r\n\r\n    if(tryJump)\r\n    {\r\n        if(_stamina.TrySpend(_staminaJumpCost))\r\n        {\r\n            // Do jump\r\n        }else\r\n        {\r\n            // Not enough stamina to jump\r\n        }\r\n    }\r\n\r\n    //Other movement code:\r\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(6540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);